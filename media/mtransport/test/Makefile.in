# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is Mozilla code.
#
# The Initial Developer of the Original Code is the Mozilla Foundation.
# Portions created by the Initial Developer are Copyright (C) 2010
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#  Chris Pearce <chris@pearce.org.nz>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****


DEPTH = ../../../
topsrcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE = test_mtransport

DEFINES += \
  -DHAVE_STRDUP -DNR_SOCKET_IS_VOID_PTR -DSCTP_DEBUG -DINET -DINET6

LIBS		= $(EXTRA_DSO_LIBS) \
		  $(XPCOM_LIBS) \
		  $(NSPR_LIBS) \
		  $(NSS_LIBS) \
		  $(DEPTH)/media/mtransport/standalone/$(LIB_PREFIX)mtransport_s.$(LIB_SUFFIX) \
		  $(DEPTH)/media/mtransport/third_party/nICEr/nicer_nicer/$(LIB_PREFIX)nicer.$(LIB_SUFFIX) \
		  $(DEPTH)/media/mtransport/third_party/nrappkit/nrappkit_nrappkit/$(LIB_PREFIX)nrappkit.$(LIB_SUFFIX) \
		  $(DEPTH)/media/webrtc/trunk/testing/gtest_gtest/$(LIB_PREFIX)gtest.$(LIB_SUFFIX) \
		  $(DEPTH)/netwerk/sctp/src/$(LIB_PREFIX)nksctp_s.$(LIB_SUFFIX) \
		  $(NULL)

LOCAL_INCLUDES += \
 -I. \
 -I$(topsrcdir)/media/webrtc/trunk/third_party/libjingle/source/ \
 -I$(topsrcdir)/media/webrtc/trunk/testing/gtest/include/ \
 -I$(topsrcdir)/media/mtransport/ \
 -I$(topsrcdir)/netwerk/sctp/src/ \

 $(NULL)

LOCAL_INCLUDES += \
 -I. \
 -I$(topsrcdir)/media/webrtc/trunk/third_party/libjingle/source/ \
 -I$(topsrcdir)/media/mtransport/third_party/ \
 -I$(topsrcdir)/media/mtransport/third_party/ \
 -I$(topsrcdir)/media/mtransport/third_party/nICEr/src/crypto \
 -I$(topsrcdir)/media/mtransport/third_party/nICEr/src/ice \
 -I$(topsrcdir)/media/mtransport/third_party/nICEr/src/net \
 -I$(topsrcdir)/media/mtransport/third_party/nICEr/src/stun \
 -I$(topsrcdir)/media/mtransport/third_party/nICEr/src/util \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/share \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/util/libekr \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/log \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/registry \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/stats \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/plugin \
 -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/event \
 $(NULL)

# SCTP DEFINES
ifeq ($(OS_TARGET),WINNT)
# CALLBACK_API is mandatory on windows; capture that here
DEFINES += \
    -D__Userspace_os_Windows=1 \
    -DCALLBACK_API=1 \
    -D_LIB=1 \
    $(NULL)
CFLAGS += /I. /W3
else
ifeq ($(OS_TARGET),Darwin)
DEFINES += \
    -D__Userspace_os_Darwin=1 \
    -D__APPLE_USE_RFC_2292=1 \
    -U__APPLE__ \
    $(NULL)
else
ifeq ($(OS_TARGET),Linux)
DEFINES += -D__Userspace_os_Linux=1
else
ifeq ($(OS_TARGET),FreeBSD)
DEFINES += \
    -D__Userspace_os_FreeBSD=1 \
    -U__FreeBSD__ \
    $(NULL)
else
#default_fallback; probably doesn't work
DEFINES += -D__Userspace_os_$(OS_TARGET)=1
endif
endif
endif
endif

# XXX These MUST match options used to build libsctp currently
DEFINES += \
   -DSCTP_SIMPLE_ALLOCATOR=1 \
   -DUSE_SCTP_SHA1=1 \
   -DSCTP_PROCESS_LEVEL_LOCKS=1 \
   -D__Userspace__=1 \
   -DINET=1 \
   -DINET6=1 \
   -DCALLBACK_API=1 \
   -DSCTP_DEBUG=1 \
   $(NULL)

# TODO: need to expand for other platforms
ifeq ($(OS_ARCH), Darwin)
LOCAL_INCLUDES +=  -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/port/darwin/include
endif

ifeq ($(OS_ARCH), Linux)
LOCAL_INCLUDES +=  -I$(topsrcdir)/media/mtransport/third_party/nrappkit/src/port/linux/include
endif

ifneq ($(OS_TARGET),WINNT)
CPP_UNIT_TESTS = \
  ice_unittest.cpp \
  nrappkit_unittest.cpp \
  sockettransportservice_unittest.cpp \
  transport_unittests.cpp \
  runnable_utils_unittest.cpp \
#  sctp_unittest.cpp \
  $(NULL)
endif

include $(topsrcdir)/config/rules.mk

